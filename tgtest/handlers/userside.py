from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardRemove
import os
import json
import emoji
from createbot import bot, dp
from aiogram import types
from handlers.states import ChooseGroup
from database import sqldb

def schedule_to_text(schedule):
    text = ""
    for week_type, days in schedule.items():
        text += f"{week_type.capitalize()} week:\n"
        for day, lessons in days.items():
            text += f"*{day}:*\n"
            if isinstance(lessons, str):
                text += f"{lessons}\n"
            else:
                for lesson in lessons:
                    text += emoji.emojize(f":alarm_clock: {lesson['time']}:\nüçò{lesson['info']}\n")
                    if lesson['addr']:
                        text += (emoji.emojize(':round_pushpin: Location:')) + f"{lesson['addr']}\n"
    return text

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! –≠—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ò–¢–ú–û. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /help', reply=False)
    
    all_users_id = [id_[0] for id_ in await sqldb.get_all_users()]
    
    if message.from_user.id not in all_users_id:
        await sqldb.add_user(message.from_user.id)

    await ChooseGroup.group.set()
    await message.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏:', reply=False)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ –≥—Ä—É–ø–ø—ã
@dp.message_handler(state=ChooseGroup.group)
async def get_group(message: types.Message, state: FSMContext):
    group_num = message.text
    group_num = group_num.upper()
    if not os.path.exists('groups/'+str(group_num)+'.json'):
        await message.reply('–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã.', reply=False)
        return
    
    await state.finish()
    
    await sqldb.change_user_group(message.from_user.id, group_num)

    await message.reply(f"–í–∞—à–∞ –≥—Ä—É–ø–ø–∞: {group_num}\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å /schedule", reply=False)

@dp.message_handler(commands=['schedule'])
async def schedule(message: types.Message):

    schedule_text = ''
    group_num = str(sqldb.get_group_name(message.from_user.id))
    with open("groups/"+str(group_num)+".json") as file:
        SCHEDULE = json.load(file)
    
    schedule_text = schedule_to_text(SCHEDULE)
    
    await bot.send_message(message.from_user.id, text= f'**–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã {group_num}:**\n\n{schedule_text}', reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")

@dp.message_handler()
async def echo(message: types.Message):
    await message.answer(message.text)
